#!/usr/bin/env python3
# This file is part of The AUTO Collection.
# Copyright (C) 2025 MauntiCat
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <https://www.gnu.org/licenses/>.
import time
import argparse

from config import Config
from log import log
import mcs150.main as mcs150


def parse_args():
    """Parse command-line arguments with config fallbacks as argparse defaults."""
    parser = argparse.ArgumentParser(
        prog="AutoEmail",
        description="Automatically send personalized emails to carrier companies."
    )

    parser.add_argument(
        "--max_emails",
        type=int,
        default=Config.max_emails,
        help="Maximum number of emails to send per email account."
    )
    parser.add_argument(
        "--email_accounts",
        nargs="+",
        default=Config.email_accounts,
        help="The email accounts to be used for sending."
    )
    parser.add_argument(
        "--mcs150_dir",
        default=Config.mcs150_dir,
        help="Directory of MCS-150 forms used for extracting emails."
    )
    parser.add_argument(
        "--invoices_dir",
        default=Config.invoices_dir,
        help="Directory of invoices to be sent with MCS-150 forms."
    )
    parser.add_argument(
        "--saved_csv",
        nargs="?",
        const=Config.companies_csv_path,
        default=Config.companies_csv_path,
        help="Use pre-saved CSV with company data. Pass a path or omit to use the default."
    )
    parser.add_argument(
        "--companies_sent_file",
        default=Config.companies_sent_file,
        help="Path to file containing USDOTs of companies to skip."
    )

    return parser.parse_args()


def main():
    args = parse_args()

    start_time = time.time()

    log.info(f"Sending up to {args.max_emails} emails using MCS-150 forms in: '{args.mcs150_dir}'")
    log.info(f"Pairing with invoices in: '{args.invoices_dir}'")

    mcs150.send_emails(
        email_accounts=args.email_accounts,
        companies_data_file=args.saved_csv,
        forms_dir=args.mcs150_dir,
        invoices_dir=args.invoices_dir,
        max_emails=args.max_emails,
        companies_sent_file=args.companies_sent_file
    )

    elapsed_time = time.time() - start_time
    log.info(f"Finished. Execution time: {elapsed_time:.2f} seconds.")


if __name__ == "__main__":
    main()
